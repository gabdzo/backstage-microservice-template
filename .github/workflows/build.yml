name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Set permissions for OpenID connect
permissions:
    id-token: write # This is required for requesting the JWT
    contents: read  # This is required for actions/checkout
    
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    concurrency:
        group: build
        cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Yarn Classic
        run: npm install -g yarn@1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Run yarn install
        working-directory: backstage
        run: |
            yarn install --immutable
            yarn tsc
            yarn build:backend --config ../../app-config.yaml --config ../../app-config.production.yaml

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        working-directory: backstage
        env:
            ECR_REGISTRY: 005669471820.dkr.ecr.eu-central-1.amazonaws.com
            ECR_REPOSITORY: showcase
            IMAGE_TAG: backstage-${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
        run: |
            docker image build . -f packages/backend/Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    