name: Deploy Infra

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deployInfrastructure:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-region: ${{ secrets.AWS_REGION }}
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
    #   - name: Prepare Terraform
    #     uses: hashicorp/setup-terraform@v2
    #     with:
    #       terraform_version: 1.3.5
    #   - name: Setup Terragrunt v0.38.4
    #     run: |
    #       sudo wget -q -O /bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.40.2/terragrunt_linux_amd64
    #       sudo chmod +x /bin/terragrunt
    #       terragrunt -v
    #   - name: Terragrunt Init
    #     working-directory: terragrunt/dev
    #     env:
    #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
    #     run: terragrunt run-all init --terragrunt-non-interactive
    #   - name: Terragrunt plan
    #     working-directory: terragrunt/dev
    #     env:
    #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
    #       TF_VAR_git_pat: ${{ secrets.GIT_PAT }}
    #     run: terragrunt run-all plan --terragrunt-non-interactive
    #   - name: Terragrunt apply
    #     working-directory: terragrunt/dev
    #     env:
    #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
    #       TF_VAR_git_pat: ${{ secrets.GIT_PAT }}

    #     run: terragrunt run-all apply --terragrunt-non-interactive