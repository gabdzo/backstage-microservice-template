name: Deploy infrastructure

on:
  workflow_call:
    inputs:
      env:
        description: 'Environment to deploy to'
        required: true
        type: string

# Set permissions for OpenID connect
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    concurrency:
      group: infra
      cancel-in-progress: true
      
    defaults:
      run:
        working-directory: terragrunt/stage/aws/backstage/core
    steps:
        # Setup requirements
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: Prepare Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.3.7
      - name: Setup Terragrunt v0.46.3
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.46.3/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt
          terragrunt -v

      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
            version: 2                         # default
            verbose: false                     # default
            arch: amd64     
      - name: Download EKS Kubeconfig
        run: |
          aws eks update-kubeconfig --name showcase --region ${{ secrets.AWS_REGION }}
  

      - name: Download image URI artifact
        uses: actions/download-artifact@v4
        with:
          name: image-uri
          path: terragrunt/stage/aws/backstage/
        
      # - name: Extract artifact
      #   run: unzip image-uri.zip
  
      - name: List files in current directory
        run: ls -alt

      - name: Read image URI
        id: read-image-uri
        run: echo "TF_VAR_backstage_image=$(cat image-uri.txt)" >> $GITHUB_ENV

        # Run TG
      - name: Init
        run: terragrunt run-all init --terragrunt-non-interactive
      - name: Plan
        # Skip plan for MAIN
        run: |
          terragrunt run-all plan --terragrunt-non-interactive
      - name: Apply
        # Apply only for MAIN
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terragrunt run-all apply --terragrunt-non-interactive